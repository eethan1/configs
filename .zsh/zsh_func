##在命令前插入 sudo {{{
#定义功能
sudo-command-line() {
[[ -z $BUFFER ]] && zle up-history
[[ $BUFFER != sudo\ * ]] && BUFFER="sudo $BUFFER"
zle end-of-line                 #光标移动到行末
}
zle -N sudo-command-line

# file manager key bind
#cdUndoKey() {
#  popd
#  zle       reset-prompt
#  echo
#  ls
#  zle       reset-prompt
#}
#
#cdParentKey() {
#  pushd ..
#  zle      reset-prompt
#  echo
#  ls
#  zle       reset-prompt
#}
#
#zle -N                 cdParentKey
#zle -N                 cdUndoKey
#
#
chpy() {
	_python=/usr/bin/python3
	if [[ $1 =~ '^(py(thon){0,1}){0,1}[0-9](\.[0-9]){0,1}$' ]]; then
		_python=/usr/bin/python$(echo $1 | sed -r 's/(py(thon){0,1}){0,1}//')
	fi
	if [ -f $_python ]; then
		echo change to $_python 
		ln -sf $_python /usr/bin/python
	fi
}





# Hook 

chpwd(){
	if [[ -v venvpath ]] then
		if [[ !($(pwd) =~ "^${venvpath}") ]] then
			eval deact
			unset venvpath
			if [[ -d venv ]] then
				eval act && venvpath=$(pwd)
			fi
		fi

	elif [[ -d venv ]] then
		eval act && venvpath=$(pwd)	
	fi
}

nginxupsite() {
	[[ -f /etc/nginx/sites-available/$1 ]] && ln -s /etc/nginx/sites-available/$1 /etc/nginx/sites-enabled/$1;
}
nginxdownsite() {
	[[ -f /etc/nginx/sites-enabled/$1 ]] && rm /etc/nginx/sites-enabled/$1;
}

dbash() {
  docker exec -it $1 /bin/bash
}

dsh() {
  docker exec -it $1 /bin/sh
}
