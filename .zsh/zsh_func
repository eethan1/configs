##在命令前插入 sudo {{{
#定义功能
sudo-command-line() {
[[ -z $BUFFER ]] && zle up-history
[[ $BUFFER != sudo\ * ]] && BUFFER="sudo $BUFFER"
zle end-of-line                 #光标移动到行末
}
zle -N sudo-command-line
proxychains-command-line() {
[[ -z $BUFFER ]] && zle up-history
[[ $BUFFER != proxychains\ * ]] && BUFFER="proxychains $BUFFER"
zle end-of-line                 #光标移动到行末
}
zle -N proxychains-command-line

cpdevip() {
ip -j addr show ${1:-tun0} | jq --join-output ".[]|.addr_info[]|select(.family==\"inet\")| .local"  | xclip -selection clipboard
}





# Hook 
AUTOVENV=0
chpwd(){
	if [[ "$AUTOVENV" == "0" ]]; then
		return 0 
	fi
	if [[ -v venvpath ]] then
		if [[ !($(pwd) =~ "^${venvpath}") ]] then
			eval source ./.venv/bin/deactivate
			unset venvpath
			if [[ -d venv ]] then
				eval source ./.venv/bin/activate && venvpath=$(pwd)
			fi
		fi

	elif [[ -d .venv ]] then
		eval source ./.venv/bin/activate && venvpath=$(pwd)	
	fi
}

nginxupsite() {
	[[ -f /etc/nginx/sites-available/$1 ]] && ln -s /etc/nginx/sites-available/$1 /etc/nginx/sites-enabled/$1;
}
nginxdownsite() {
	[[ -f /etc/nginx/sites-enabled/$1 ]] && rm /etc/nginx/sites-enabled/$1;
}

dbash() {
  docker exec -it $1 /bin/bash
}

dbashroot() {
  docker exec -it -u 0 $1 /bin/bash
}

dsh() {
  docker exec -it $1 /bin/sh
}

mkwindir() {
  local win_path="$1"
  # 移除前面的雙反斜線 \\（如果有）
  local trimmed="${win_path#\\\\}"
  # 將反斜線 \ 換成正斜線 /
  local unix_path="${trimmed//\\//}"
  # 建立目錄
  mkdir -p "$unix_path"
}
